package API;

public interface PersistentCollection<T> {
    /**
     * Добавляет элемент в коллекцию, создавая новую версию.
     *
     * @param element Элемент для добавления.
     * @return Новая версия коллекции с добавленным элементом.
     */
    PersistentCollection<T> add(T element);

    /**
     * Добавляет элемент в коллекцию на определённую позицию.
     *
     * @param index Индекс - место вставки нового элемента.
     * @param element Элемент для обновления.
     * @return Новая версия коллекции с добавленным элементом.
     */
    PersistentCollection<T> update(int index, T element);

    /**
     * Удаляет элемент из коллекции, создавая новую версию.
     *
     * @param element Элемент для удаления.
     * @return Новая версия коллекции без указанного элемента.
     */
    PersistentCollection<T> remove(T element);

    /**
     * Возвращает элемент по индексу из указанной версии коллекции.
     *
     * @param param Индекс или ключ элемента.
     * @return Элемент по указанному индексу.
     */
    T get(Object param);

    /**
     * Проверяет наличие элемента в коллекции.
     *
     * @param element Элемент для проверки.
     * @return true, если элемент присутствует, false в противном случае.
     */
    boolean contains(T element);

    /**
     * Возвращает размер коллекции в указанной версии.
     *
     * @return Размер коллекции.
     */
    int size();

    /**
     * Возвращает новую версию коллекции с отмененным последним действием.
     *
     * @return Новая версия коллекции с отмененным действием.
     */
    PersistentCollection<T> undo();

    /**
     * Возвращает новую версию коллекции с выполненным отмененным действием.
     *
     * @return Новая версия коллекции с выполненным отмененным действием.
     */
    PersistentCollection<T> redo();
}
